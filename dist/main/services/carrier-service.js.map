{"version":3,"sources":["../../../src/main/services/carrier-service.ts"],"sourcesContent":["import {\n  queryInPlaceDocumentCount,\n  queryMisplacedDocument,\n  addMisPlacedDocument,\n  queryMisplacedDocumentCount,\n  updateDocStatusByID,\n  updateMisPlaceDocument\n} from '@/database/methods/document'\nimport prisma from '@/database'\nimport { generateCurrentTime } from '@/utils'\nimport { doc_document, rfid_switch_record } from '@prisma/client'\nimport { getReportData } from './rfid-service'\n\nconst getAllCarrierData = async (): Promise<doc_document[]> => {\n  const result = await prisma.doc_document.findMany()\n  return result\n}\n\nconst getCarrierDataByCondition = async (condition: CarrierQueryProps): Promise<{\n  data: doc_document[]\n  total: number\n}> => {\n  const where = {\n    cabinet_door_id: condition.cabinetId ? Number(condition.cabinetId) : undefined,\n    doc_name: {\n      contains: condition.title\n    },\n    loan_status: condition.state ?? undefined,\n    binding_dept_id: condition.departmentId ? Number(condition.departmentId) : undefined\n  }\n\n  if (condition.state === 2) {\n    const misPlaceDocuments = await queryMisplacedDocument()\n    const rfids = misPlaceDocuments.map(item => item.operation_id)\n    where.loan_status = 1\n    where['doc_rfid'] = { in: rfids }\n  } else if (condition.state === 1) {\n    const misPlaceDocuments = await queryMisplacedDocument()\n    const rfids = misPlaceDocuments.map(item => item.operation_id)\n    where.loan_status = 1\n    where['doc_rfid'] = { notIn: rfids }\n  }\n\n  const result = await prisma.doc_document.findMany({\n    skip: (condition.page - 1) * condition.size,\n    take: condition.size,\n    where\n  })\n\n  const count = await prisma.doc_document.count({\n    where\n  })\n\n  return {\n    data: result,\n    total: count\n  }\n}\n\nconst getCarrierDataByCabinetId = async (cabinetId: number): Promise<doc_document[]> => {\n  const result = await prisma.doc_document.findMany({\n    where: {\n      cabinet_door_id: cabinetId\n    }\n  })\n\n  return result\n}\n\nconst getInPlaceCarrierCount = async (cabinetId?: number) => {\n  return await queryInPlaceDocumentCount(cabinetId)\n}\n\nconst getMisPlaceCarriers = async (): Promise<rfid_switch_record[]> => {\n  return await queryMisplacedDocument()\n}\n\nconst updateCarrier = async (cabinetDoor: CabinetDoorProps, userId?: number) => {\n  const TIDList = getReportData(cabinetDoor.antenna_address)\n  console.log(cabinetDoor.id, '柜门id')\n  console.log('🚀 ~ file: document-service.ts:94 ~ updateCarrier ~ TIDList:', TIDList)\n  console.log('🚀 ~ file: document-service.ts:94 ~ updateCarrier ~ TIDList.length:', TIDList.length)\n\n  const documents = await getAllCarrierData()\n\n  for (let i = 0; i < documents.length; i++) {\n    const doc = documents[i]\n\n    // 如果不是本柜门文件\n    if (doc.cabinet_door_id !== cabinetDoor.id) {\n      const isWarningDocument = (await queryMisplacedDocumentCount(cabinetDoor.id, doc.doc_rfid)) !== 0\n      if (isWarningDocument) continue\n\n      const data: Partial<rfid_switch_record> = {\n        cabinet_door_id: cabinetDoor.id,\n        cabinet_id: cabinetDoor.cabinet_id,\n        content: `文件[${doc.doc_name}]错放`,\n        datetime: generateCurrentTime(),\n        operation_id: TIDList.includes(doc.doc_rfid) ? doc.doc_rfid : '0',\n        type: '1',\n        user_id: userId || null\n      }\n      await addMisPlacedDocument(data)\n    } else {\n      const isDocumentDetected = TIDList.includes(doc.doc_rfid)\n\n      // 归还\n      if (isDocumentDetected && doc.loan_status === 1) {\n        await updateDocStatusByID(doc.doc_id, 0, userId)\n      }\n      // 借出\n      else if (!isDocumentDetected && doc.loan_status === 0) {\n        await updateDocStatusByID(doc.doc_id, 1, userId)\n      }\n    }\n  }\n\n  const misPlaceDocuments = await getMisPlaceCarriers()\n  for (let i = 0; i < misPlaceDocuments.length; i++) {\n    const doc = misPlaceDocuments[i]\n    if (!TIDList.includes(doc.operation_id)) {\n      await updateMisPlaceDocument(doc.operation_id)\n    }\n  }\n}\n\nconst carrierService = {\n  name: 'carrier' as const,\n  fns: {\n    getAllCarrierData,\n    getCarrierDataByCondition,\n    getCarrierDataByCabinetId,\n    getInPlaceCarrierCount,\n    getMisPlaceCarriers,\n    updateCarrier\n  }\n}\n\nexport default carrierService\n\n"],"names":["getAllCarrierData","result","prisma","doc_document","findMany","getCarrierDataByCondition","condition","where","cabinet_door_id","cabinetId","Number","undefined","doc_name","contains","title","loan_status","state","binding_dept_id","departmentId","misPlaceDocuments","queryMisplacedDocument","rfids","map","item","operation_id","in","notIn","skip","page","size","take","count","data","total","getCarrierDataByCabinetId","getInPlaceCarrierCount","queryInPlaceDocumentCount","getMisPlaceCarriers","updateCarrier","cabinetDoor","userId","TIDList","getReportData","antenna_address","console","log","id","length","documents","i","doc","isWarningDocument","queryMisplacedDocumentCount","doc_rfid","cabinet_id","content","datetime","generateCurrentTime","includes","type","user_id","addMisPlacedDocument","isDocumentDetected","updateDocStatusByID","doc_id","updateMisPlaceDocument","carrierService","name","fns"],"mappings":";;;;+BA0IA;;;eAAA;;;0BAnIO;iEACY;uBACiB;6BAEN;;;;;;AAE9B,MAAMA,oBAAoB;IACxB,MAAMC,SAAS,MAAMC,kBAAOC,aAAaC;IACzC,OAAOH;AACT;AAEA,MAAMI,4BAA4B,OAAOC;QASxBA;IALf,MAAMC,QAAQ;QACZC,iBAAiBF,UAAUG,YAAYC,OAAOJ,UAAUG,aAAaE;QACrEC,UAAU;YACRC,UAAUP,UAAUQ;QACtB;QACAC,aAAaT,CAAAA,mBAAAA,UAAUU,mBAAVV,8BAAAA,mBAAmBK;QAChCM,iBAAiBX,UAAUY,eAAeR,OAAOJ,UAAUY,gBAAgBP;IAC7E;IAEA,IAAIL,UAAUU,UAAU,GAAG;QACzB,MAAMG,oBAAoB,MAAMC,IAAAA;QAChC,MAAMC,QAAQF,kBAAkBG,IAAIC,CAAAA,OAAQA,KAAKC;QACjDjB,MAAMQ,cAAc;QACpBR,KAAK,CAAC,WAAW,GAAG;YAAEkB,IAAIJ;QAAM;IAClC,OAAO,IAAIf,UAAUU,UAAU,GAAG;QAChC,MAAMG,oBAAoB,MAAMC,IAAAA;QAChC,MAAMC,QAAQF,kBAAkBG,IAAIC,CAAAA,OAAQA,KAAKC;QACjDjB,MAAMQ,cAAc;QACpBR,KAAK,CAAC,WAAW,GAAG;YAAEmB,OAAOL;QAAM;IACrC;IAEA,MAAMpB,SAAS,MAAMC,kBAAOC,aAAaC,SAAS;QAChDuB,MAAM,AAACrB,CAAAA,UAAUsB,OAAO,CAAA,IAAKtB,UAAUuB;QACvCC,MAAMxB,UAAUuB;QAChBtB;IACF;IAEA,MAAMwB,QAAQ,MAAM7B,kBAAOC,aAAa4B,MAAM;QAC5CxB;IACF;IAEA,OAAO;QACLyB,MAAM/B;QACNgC,OAAOF;IACT;AACF;AAEA,MAAMG,4BAA4B,OAAOzB;IACvC,MAAMR,SAAS,MAAMC,kBAAOC,aAAaC,SAAS;QAChDG,OAAO;YACLC,iBAAiBC;QACnB;IACF;IAEA,OAAOR;AACT;AAEA,MAAMkC,yBAAyB,OAAO1B;IACpC,OAAO,MAAM2B,IAAAA,qCAA0B3B;AACzC;AAEA,MAAM4B,sBAAsB;IAC1B,OAAO,MAAMjB,IAAAA;AACf;AAEA,MAAMkB,gBAAgB,OAAOC,aAA+BC;IAC1D,MAAMC,UAAUC,IAAAA,4BAAcH,YAAYI;IAC1CC,QAAQC,IAAIN,YAAYO,IAAI;IAC5BF,QAAQC,IAAI,gEAAgEJ;IAC5EG,QAAQC,IAAI,uEAAuEJ,QAAQM;IAE3F,MAAMC,YAAY,MAAMhD;IAExB,IAAK,IAAIiD,IAAI,GAAGA,IAAID,UAAUD,QAAQE,IAAK;QACzC,MAAMC,MAAMF,SAAS,CAACC,EAAE;QAExB,YAAY;QACZ,IAAIC,IAAI1C,oBAAoB+B,YAAYO,IAAI;YAC1C,MAAMK,oBAAoB,AAAC,MAAMC,IAAAA,uCAA4Bb,YAAYO,IAAII,IAAIG,cAAe;YAChG,IAAIF,mBAAmB;YAEvB,MAAMnB,OAAoC;gBACxCxB,iBAAiB+B,YAAYO;gBAC7BQ,YAAYf,YAAYe;gBACxBC,SAAS,CAAC,GAAG,EAAEL,IAAItC,SAAS,GAAG,CAAC;gBAChC4C,UAAUC,IAAAA;gBACVjC,cAAciB,QAAQiB,SAASR,IAAIG,YAAYH,IAAIG,WAAW;gBAC9DM,MAAM;gBACNC,SAASpB,UAAU;YACrB;YACA,MAAMqB,IAAAA,gCAAqB7B;QAC7B,OAAO;YACL,MAAM8B,qBAAqBrB,QAAQiB,SAASR,IAAIG;YAEhD,KAAK;YACL,IAAIS,sBAAsBZ,IAAInC,gBAAgB,GAAG;gBAC/C,MAAMgD,IAAAA,+BAAoBb,IAAIc,QAAQ,GAAGxB;YAC3C,OAEK,IAAI,CAACsB,sBAAsBZ,IAAInC,gBAAgB,GAAG;gBACrD,MAAMgD,IAAAA,+BAAoBb,IAAIc,QAAQ,GAAGxB;YAC3C;QACF;IACF;IAEA,MAAMrB,oBAAoB,MAAMkB;IAChC,IAAK,IAAIY,IAAI,GAAGA,IAAI9B,kBAAkB4B,QAAQE,IAAK;QACjD,MAAMC,MAAM/B,iBAAiB,CAAC8B,EAAE;QAChC,IAAI,CAACR,QAAQiB,SAASR,IAAI1B,eAAe;YACvC,MAAMyC,IAAAA,kCAAuBf,IAAI1B;QACnC;IACF;AACF;AAEA,MAAM0C,iBAAiB;IACrBC,MAAM;IACNC,KAAK;QACHpE;QACAK;QACA6B;QACAC;QACAE;QACAC;IACF;AACF;MAEA,WAAe4B"}