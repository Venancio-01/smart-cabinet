{"version":3,"sources":["../../../src/main/services/update-service.ts"],"sourcesContent":["import Socket from '@/utils/socket'\nimport { UPDATE_SERVICE_SOCKET_PATH } from '@/config'\nimport { getAppVersion } from '@/utils'\n\nlet instance = null\nlet isConnected = false\n\nexport function handleExitUpdateService() {\n  if (!isConnected)\n    return\n\n  const message = {\n    type: 'exit' as const,\n  }\n\n  handleSendData(message)\n}\n\nfunction handleSendData(data: MessageType) {\n  const stringifyData = JSON.stringify(data)\n  instance.write(stringifyData)\n}\n\nfunction handleReceiveData() {\n  if (!isConnected)\n    return\n\n  const data = instance.getData()\n  if (data === '')\n    return null\n\n  instance.setData('')\n  try {\n    const parseData = JSON.parse(data) as ReceiveData\n    return parseData\n  }\n  catch (e) {\n    console.log(e)\n    return null\n  }\n}\n\nfunction handleSendCheckVersionMessage() {\n  if (!isConnected)\n    return\n\n  const data = {\n    type: 'version' as const,\n    content: getAppVersion(),\n    path: 'https://service.qingshan.ltd/version.json',\n  }\n  handleSendData(data)\n}\n\nfunction handleSendDownloadMessage() {\n  if (!isConnected)\n    return\n\n  const data = {\n    type: 'download' as const,\n  }\n  handleSendData(data)\n}\n\nconst updateService = {\n  name: 'update' as const,\n  fns: {\n    init: async () => {\n      instance = new Socket({\n        address: UPDATE_SERVICE_SOCKET_PATH,\n        format: 'utf-8',\n      })\n\n      try {\n        await instance.init()\n        return (isConnected = true)\n      }\n      catch (e) {\n        console.log(e, 'update service socket 连接失败')\n        return isConnected\n      }\n    },\n    handleReceiveData,\n    handleSendCheckVersionMessage,\n    handleSendDownloadMessage,\n    handleExitUpdateService,\n  },\n}\n\nexport default updateService\n"],"names":["handleExitUpdateService","instance","isConnected","message","type","handleSendData","data","stringifyData","JSON","stringify","write","handleReceiveData","getData","setData","parseData","parse","e","console","log","handleSendCheckVersionMessage","content","getAppVersion","path","handleSendDownloadMessage","updateService","name","fns","init","Socket","address","UPDATE_SERVICE_SOCKET_PATH","format"],"mappings":";;;;;;;;;;;IAOgBA,uBAAuB;eAAvBA;;IAkFhB,OAA4B;eAA5B;;;6DAzFmB;sBACwB;qBACb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAE9B,IAAIC,WAAW;AACf,IAAIC,cAAc;AAEX,SAASF;IACd,IAAI,CAACE,aACH;IAEF,IAAMC,UAAU;QACdC,MAAM;IACR;IAEAC,eAAeF;AACjB;AAEA,SAASE,eAAeC,IAAiB;IACvC,IAAMC,gBAAgBC,KAAKC,UAAUH;IACrCL,SAASS,MAAMH;AACjB;AAEA,SAASI;IACP,IAAI,CAACT,aACH;IAEF,IAAMI,OAAOL,SAASW;IACtB,IAAIN,SAAS,IACX,OAAO;IAETL,SAASY,QAAQ;IACjB,IAAI;QACF,IAAMC,YAAYN,KAAKO,MAAMT;QAC7B,OAAOQ;IACT,EACA,OAAOE,GAAG;QACRC,QAAQC,IAAIF;QACZ,OAAO;IACT;AACF;AAEA,SAASG;IACP,IAAI,CAACjB,aACH;IAEF,IAAMI,OAAO;QACXF,MAAM;QACNgB,SAASC,IAAAA;QACTC,MAAM;IACR;IACAjB,eAAeC;AACjB;AAEA,SAASiB;IACP,IAAI,CAACrB,aACH;IAEF,IAAMI,OAAO;QACXF,MAAM;IACR;IACAC,eAAeC;AACjB;AAEA,IAAMkB,gBAAgB;IACpBC,MAAM;IACNC,KAAK;QACHC,oBAAM,oBAAA;gBAUGX;;;;wBATPf,WAAW,IAAI2B,gBAAO;4BACpBC,SAASC;4BACTC,QAAQ;wBACV;;;;;;;;;wBAGE;;4BAAM9B,SAAS0B;;;wBAAf;wBACA;;4BAAQzB,cAAc;;;wBAEjBc;wBACLC,QAAQC,IAAIF,GAAG;wBACf;;4BAAOd;;;;;;;;QAEX;QACAS,mBAAAA;QACAQ,+BAAAA;QACAI,2BAAAA;QACAvB,yBAAAA;IACF;AACF;IAEA,WAAewB"}