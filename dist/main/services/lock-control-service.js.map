{"version":3,"sources":["../../../src/main/services/lock-control-service.ts"],"sourcesContent":["import { execSync } from 'child_process'\nimport { SerialPort as SerialPortLib } from 'serialport'\nimport { convertDecimalToBinary, generateLockCommand } from '@/utils'\nimport SerialPort from '@/utils/serial-port'\n\n// 串口实例\nlet instance: SerialPort | null = null\nlet connected = false\n\nasync function getConnectState(path: string) {\n  const list = await SerialPortLib.list()\n  connected = Boolean(list.find(item => item.path === path))\n  return connected\n}\n\n// 设置串口权限\nasync function setPermissions() {\n  try {\n    await execSync('sudo chmod 777 /dev/ttyUSB0')\n    console.log('设置串口权限成功')\n  }\n  catch (error) {\n    console.log('设置串口权限失败')\n  }\n}\n\nasync function init(path: string, baudRate: number) {\n  if (instance)\n    return\n\n  await setPermissions()\n\n  if (!connected) {\n    console.log('未连接锁控板，初始化失败')\n    return\n  }\n\n  instance = new SerialPort({ path, baudRate })\n  await instance.open()\n  await instance.close()\n  await instance.open()\n}\n\nasync function close() {\n  if (!instance)\n    return\n\n  instance.close()\n}\n\n/**\n * @description: 查询锁状态\n * @return {*}\n */\nfunction queryAllState() {\n  if (!instance)\n    return false\n\n  const command = generateLockCommand('80010033')\n  instance.write(command)\n}\n\n/**\n * @description: 开锁\n * @param {string} boardAddress 板地址，格式 01、02\n * @param {string} lockAddress 锁地址，格式 01、02\n * @return {*}\n */\nfunction open(boardAddress = '01', lockAddress = '01') {\n  if (!instance)\n    return false\n\n  const command = generateLockCommand(`8a${boardAddress}${lockAddress}11`)\n  instance.write(command)\n}\n\n/**\n * @description: 开启全部锁\n * @return {*}\n */\nfunction openAll() {\n  if (!instance)\n    return false\n\n  const command = generateLockCommand('8a010011')\n  instance.write(command)\n}\n\n/**\n * @description: 获取门锁开启状态\n * @return {*}\n */\nfunction getOpenStatus(): null | LockControlStateProps {\n  if (!instance) {\n    console.log('实例未初始化')\n    return null\n  }\n\n  const COMMAND_HEADER = '8001'\n  const MAX_LOCK_COUNT = 24\n  const data = instance.getData()\n\n  // 找出命令的返回结果\n  const commandHeaderIndex = data.indexOf(COMMAND_HEADER)\n  const commandBody = data.slice(commandHeaderIndex + COMMAND_HEADER.length, commandHeaderIndex + COMMAND_HEADER.length + 10)\n\n  // 锁控板命令未接收完整\n  if (commandBody.length < 10)\n    return null\n\n  // 最多一次查询 24 个锁的状态，分三组，每组 8 个锁，转化为 2 进制后格式为 00000001 ，0 代表开启，1 代表关闭\n  // 17 - 24 锁控状态\n  const lockGroup_3 = convertDecimalToBinary(Number(commandBody.slice(0, 2)))\n  // 9 - 16 锁控状态\n  const lockGroup_2 = convertDecimalToBinary(Number(commandBody.slice(2, 4)))\n  // 1 - 8 锁控状态\n  const lockGroup_1 = convertDecimalToBinary(Number(commandBody.slice(4, 6)))\n\n  const result = new Array(MAX_LOCK_COUNT).fill(0).reduce((acc, cur, index) => {\n    const group = index < 8 ? lockGroup_1 : index < 16 ? lockGroup_2 : lockGroup_3\n    const lockIndex = index < 8 ? index : index < 16 ? index - 8 : index - 16\n    acc[index + 1] = group[lockIndex] === '0'\n\n    return acc\n  }, {})\n\n  instance.setData('')\n\n  return result\n}\n\nconst lockControlService = {\n  name: 'lockControl' as const,\n  fns: {\n    getConnectState,\n    init,\n    close,\n    queryAllState,\n    open,\n    openAll,\n    getOpenStatus,\n  },\n}\n\nexport default lockControlService\n"],"names":["instance","connected","getConnectState","path","list","SerialPortLib","Boolean","find","item","setPermissions","error","execSync","console","log","init","baudRate","SerialPort","open","close","queryAllState","command","generateLockCommand","write","boardAddress","lockAddress","openAll","getOpenStatus","COMMAND_HEADER","MAX_LOCK_COUNT","data","getData","commandHeaderIndex","indexOf","commandBody","slice","length","lockGroup_3","convertDecimalToBinary","Number","lockGroup_2","lockGroup_1","result","Array","fill","reduce","acc","cur","index","group","lockIndex","setData","lockControlService","name","fns"],"mappings":"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"}