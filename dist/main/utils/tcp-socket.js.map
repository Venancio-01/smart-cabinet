{"version":3,"sources":["../../../src/main/utils/tcp-socket.ts"],"sourcesContent":["// 导入 net 模块\nimport net from 'net';\n\n// 定义 tcpSocket 类\nexport default class TcpSocket {\n  // 声明一个私有的 net.Socket 属性\n  private socket: net.Socket;\n\n  // 定义构造函数，传入 address 和 port 参数\n  constructor(address: string, port: number) {\n    // 创建一个新的 net.Socket 实例\n    this.socket = new net.Socket();\n\n    // 连接到指定的地址和端口\n    this.socket.connect(port, address, () => {\n      // 连接成功后的回调函数\n      console.log('Connected to ' + address + ':' + port);\n    });\n\n    // 监听 socket 的 data 事件，接收数据\n    this.socket.on('data', (data) => {\n      // 处理接收到的数据\n      console.log('Received: ' + data);\n    });\n\n    // 监听 socket 的 close 事件，断开连接\n    this.socket.on('close', () => {\n      // 处理断开连接的情况\n      console.log('Connection closed');\n    });\n  }\n\n  // 定义一个发送数据的方法\n  send(data: Buffer | string) {\n    // 调用 socket 的 write 方法，发送数据\n    this.socket.write(data);\n  }\n\n  // 定义一个关闭连接的方法\n  close() {\n    // 调用 socket 的 destroy 方法，关闭连接\n    this.socket.destroy();\n  }\n}\n"],"names":["TcpSocket","send","data","socket","write","close","destroy","constructor","address","port","net","Socket","connect","console","log","on"],"mappings":"AAAA,YAAY;;;;;;;;eAISA;;;4DAHL;;;;;;;;;;;;;;;;;;;AAGD,MAAMA;IA4BnB,cAAc;IACdC,KAAKC,IAAqB,EAAE;QAC1B,4BAA4B;QAC5B,IAAI,CAACC,OAAOC,MAAMF;IACpB;IAEA,cAAc;IACdG,QAAQ;QACN,8BAA8B;QAC9B,IAAI,CAACF,OAAOG;IACd;IAlCA,8BAA8B;IAC9BC,YAAYC,OAAe,EAAEC,IAAY,CAAE;QAJ3C,wBAAwB;QACxB,uBAAQN,UAAR,KAAA;QAIE,uBAAuB;QACvB,IAAI,CAACA,SAAS,IAAIO,aAAIC;QAEtB,cAAc;QACd,IAAI,CAACR,OAAOS,QAAQH,MAAMD,SAAS;YACjC,aAAa;YACbK,QAAQC,IAAI,kBAAkBN,UAAU,MAAMC;QAChD;QAEA,2BAA2B;QAC3B,IAAI,CAACN,OAAOY,GAAG,QAAQ,CAACb;YACtB,WAAW;YACXW,QAAQC,IAAI,eAAeZ;QAC7B;QAEA,4BAA4B;QAC5B,IAAI,CAACC,OAAOY,GAAG,SAAS;YACtB,YAAY;YACZF,QAAQC,IAAI;QACd;IACF;AAaF"}