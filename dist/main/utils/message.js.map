{"version":3,"sources":["../../../src/main/utils/message.ts"],"sourcesContent":["export interface Message {\n  name: string\n  content: string\n  time: number\n}\n\ninterface Listener<T extends any[]> {\n  eventName: string\n  callback: (...args: T) => void\n}\n\nexport class MessageQueue {\n  private messages: Message[] = [] // 存储消息队列\n  private maxLength = 800 // 消息队列上限\n  private listeners: Listener<any>[] = [] // 事件监听器列表\n\n  // 添加消息到队列中\n  push(message: Message): void {\n    if (this.messages.length >= this.maxLength) {\n      // 消息队列已满，删除最早的一些消息\n      this.messages.splice(0, 100)\n    }\n\n    this.messages.push(message)\n\n    // 触发 push 事件，调用所有相关的事件监听器\n    this.emit('push', message, this.messages)\n  }\n\n  // 根据名称获取队列中的消息\n  getMessages(name: string): Message[] {\n    return this.messages.filter(item => item.name === name)\n  }\n\n  // 获取队列中的所有消息\n  getAllMessages(): Message[] {\n    return this.messages\n  }\n\n  clear(): void {\n    this.messages = []\n  }\n\n  // 添加事件监听器\n  on<T extends any[]>(eventName: string, callback: (...args: T) => void): void {\n    this.listeners.push({ eventName, callback })\n  }\n\n  // 触发事件\n  emit<T extends any[]>(eventName: string, ...args: T): void {\n    for (const listener of this.listeners) {\n      if (listener.eventName === eventName)\n        listener.callback(...args)\n    }\n  }\n}\n"],"names":["MessageQueue","push","message","messages","length","maxLength","splice","emit","getMessages","name","filter","item","getAllMessages","clear","on","eventName","callback","listeners","args","listener"],"mappings":";;;;+BAWaA;;;eAAAA;;;;;;;;;;;;;;;;AAAN,MAAMA;IAKX,WAAW;IACXC,KAAKC,OAAgB,EAAQ;QAC3B,IAAI,IAAI,CAACC,SAASC,UAAU,IAAI,CAACC,WAAW;YAC1C,mBAAmB;YACnB,IAAI,CAACF,SAASG,OAAO,GAAG;QAC1B;QAEA,IAAI,CAACH,SAASF,KAAKC;QAEnB,0BAA0B;QAC1B,IAAI,CAACK,KAAK,QAAQL,SAAS,IAAI,CAACC;IAClC;IAEA,eAAe;IACfK,YAAYC,IAAY,EAAa;QACnC,OAAO,IAAI,CAACN,SAASO,OAAOC,CAAAA,OAAQA,KAAKF,SAASA;IACpD;IAEA,aAAa;IACbG,iBAA4B;QAC1B,OAAO,IAAI,CAACT;IACd;IAEAU,QAAc;QACZ,IAAI,CAACV,WAAW,EAAE;IACpB;IAEA,UAAU;IACVW,GAAoBC,SAAiB,EAAEC,QAA8B,EAAQ;QAC3E,IAAI,CAACC,UAAUhB,KAAK;YAAEc;YAAWC;QAAS;IAC5C;IAEA,OAAO;IACPT,KAAsBQ,SAAiB,EAAE,GAAGG,IAAO,EAAQ;QACzD,KAAK,MAAMC,YAAY,IAAI,CAACF,UAAW;YACrC,IAAIE,SAASJ,cAAcA,WACzBI,SAASH,YAAYE;QACzB;IACF;;QA1CA,uBAAQf,YAAsB,EAAE,CAAC,SAAS;;QAC1C,uBAAQE,aAAY,IAAI,SAAS;;QACjC,uBAAQY,aAA6B,EAAE,CAAC,UAAU;;;AAyCpD"}