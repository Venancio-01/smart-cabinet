{"version":3,"sources":["../../../src/main/utils/index.ts"],"sourcesContent":["import { Buffer } from 'buffer'\nimport { MD5 } from 'crypto-js'\nimport dayjs from 'dayjs'\nimport { Library } from 'ffi-napi'\nimport pkg from '../../../package.json'\nimport { UcharType } from '@/services/finger-service/types'\nimport { CRC_SDK_PATH } from '@/config'\n\n/**\n * @description: 生成 ipc 通信的返回数据结构\n * @param {*} T\n * @return {*}\n */\nexport function genResponseData<T>(success: boolean, msg?: string, data?: T) {\n  return {\n    success,\n    msg,\n    data,\n  }\n}\n\n/**\n * @description: 生成 md5 加密后的密码\n * @param {string} username\n * @param {string} password\n * @param {string} salt\n * @return {*}\n */\nexport function genMd5EncryptedPassword(username: string, password: string, salt: string) {\n  return MD5(username + password + salt).toString()\n}\n\nexport function parseRFIDReportData(data: string): string[] {\n  const PREFIX = '5a00011200'\n  const arr = data.split(PREFIX)\n\n  const parseArr = arr.reduce((acc, cur) => {\n    if (cur.startsWith('00')) {\n      const length = parseInt(`0x${cur.substring(0, 4)}`, 16) * 2\n      acc.push(`${PREFIX}${cur.substring(0, 4 + length)}`)\n    }\n\n    return acc\n  }, [])\n\n  return parseArr\n}\n\n/**\n * @description: 从 RFID 读取器上报命令中获取 EPC 和 TID\n * @param {string} command\n * @return {*}\n */\nexport function getTIDByReportData(data: string) {\n  let str = data\n  const PREFIX = '5a00011200'\n  const TIDLengthCommandLength = 4\n  const MidCommandLength = 16\n\n  str = str.replace(PREFIX, '')\n\n  const EPCLength = parseInt(`0x${str.substring(4, 8)}`, 16) * 2\n  const TIDLength\n    = parseInt(\n      `0x${str.substring(8 + EPCLength + MidCommandLength, 8 + EPCLength + MidCommandLength + TIDLengthCommandLength)}`,\n      16,\n    ) * 2\n\n  const TID = str.substring(\n    8 + EPCLength + MidCommandLength + TIDLengthCommandLength,\n    8 + EPCLength + MidCommandLength + TIDLengthCommandLength + TIDLength,\n  )\n\n  return TID\n}\n\nexport function generateCurrentTime() {\n  return dayjs().format('YYYY-MM-DD HH:mm:ss')\n}\n\n/**\n * @description: 十进制转二进制并补全 8 位，再颠倒顺序\n * @param {number} number\n * @return {*}\n */\nexport function convertDecimalToBinary(number: number) {\n  const binary = number.toString(2)\n  const binaryLength = binary.length\n  const MAX_LENGTH = 8\n  const binaryString = new Array(MAX_LENGTH - binaryLength).fill('0').join('') + binary\n  const result = binaryString.split('').reverse().join('')\n\n  return result\n}\n\n/**\n * @description: 根据数组数组生成对应索引为 1 的二进制字符串\n * @param {number} numbers\n * @return {*}\n */\nexport function generateBinaryString(numbers: number[]) {\n  const binaryArray = Array.from({ length: 32 }, () => '0')\n\n  for (const num of numbers)\n    binaryArray[num - 1] = '1'\n\n  return binaryArray.reverse().join('')\n}\n\n/**\n * @description: 二进制字符串转十六进制字符串，长度为8，补0\n * @param {string} binary\n * @return {*}\n */\nexport function binaryToHex(binary: string): string {\n  const hex = parseInt(binary, 2).toString(16).toUpperCase()\n  return hex.padStart(8, '0')\n}\n\n/**\n * @description: 生成锁控板命令\n * @param {string} source 锁控板命令\n * @return {*}\n */\nexport function generateLockCommand(source: string) {\n  const arr = []\n  for (let index = 0; index < source.length; index++) {\n    if (index % 2 === 0)\n      arr.push(`0x${source.slice(index, index + 2)}`)\n  }\n\n  const result = arr.reduce((acc, cur, index) => {\n    if (index === 0)\n      acc = cur\n    else\n      acc = `0x${(acc ^ cur).toString(16)}`\n\n    return acc\n  }, '')\n\n  const command = [...arr, result]\n    .map(item => item.slice(2, 4))\n    .join('')\n    .toLocaleUpperCase()\n\n  return Buffer.from(command, 'hex')\n}\n\n/**\n * @description: 生成 CRC16 校验码\n * @param {string} str\n * @return {*}\n */\nexport function generateCRC16Code(str: string) {\n  const crcSDK = Library(CRC_SDK_PATH, {\n    CRC16_CCITT: ['int', [UcharType, 'int']],\n  })\n\n  const buffer = Buffer.from(str, 'hex')\n  return crcSDK.CRC16_CCITT(buffer, buffer.length).toString(16)\n}\n\n/**\n * @description: 获取应用版本信息\n * @return {*}\n */\nexport function getAppVersion(): string {\n  return pkg.version\n}\n"],"names":["genResponseData","genMd5EncryptedPassword","parseRFIDReportData","getTIDByReportData","generateCurrentTime","convertDecimalToBinary","generateBinaryString","binaryToHex","generateLockCommand","generateCRC16Code","getAppVersion","success","msg","data","username","password","salt","MD5","toString","PREFIX","arr","split","parseArr","reduce","acc","cur","startsWith","length","parseInt","substring","push","str","TIDLengthCommandLength","MidCommandLength","replace","EPCLength","TIDLength","TID","dayjs","format","number","binary","binaryLength","MAX_LENGTH","binaryString","Array","fill","join","result","reverse","numbers","binaryArray","from","num","hex","toUpperCase","padStart","source","index","slice","command","map","item","toLocaleUpperCase","Buffer","crcSDK","Library","CRC_SDK_PATH","CRC16_CCITT","UcharType","buffer","pkg","version"],"mappings":"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"}