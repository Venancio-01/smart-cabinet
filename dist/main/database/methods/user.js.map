{"version":3,"sources":["../../../../src/main/database/methods/user.ts"],"sourcesContent":["import prisma from '@/database'\n\nexport const queryDepartNameByDeptId = async (deptId: number) => {\n  const result = await prisma.sys_dept.findFirst({\n    where: {\n      id: deptId\n    },\n    select: {\n      dept_name: true\n    }\n  })\n  return result?.dept_name\n}\n\nexport const queryRoleIdByUserId = async (userId: number) => {\n  const result = await prisma.sys_user_role.findFirst({\n    where: {\n      user_id: userId\n    },\n    select: {\n      role_id: true\n    }\n  })\n  return result?.role_id\n}\n\nexport const queryRoleNameByRoleId = async (roleId: number) => {\n  const result = await prisma.sys_role.findFirst({\n    where: {\n      id: roleId\n    },\n    select: {\n      role_name: true\n    }\n  })\n  return result?.role_name\n}\n\nexport const queryUsers = async () => {\n  return await prisma.sys_user.findMany()\n}\n\nexport const queryUserByUserId = async (userId: number) => {\n  const result = await prisma.sys_user.findUnique({\n    where: {\n      id: userId\n    },\n    include: {\n      sys_dept: true,\n      sys_user_role: {\n        include: {\n          sys_role: {\n            include: {\n              sys_role_permission: {\n                include: {\n                  sys_permission: true\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  })\n\n  return result\n}\n\nexport const queryUserByLoginName = async (loginName: string) => {\n  const result = await prisma.sys_user.findFirst({\n    where: {\n      login_name: loginName\n    },\n    include: {\n      sys_dept: true,\n      sys_user_role: {\n        include: {\n          sys_role: {\n            include: {\n              sys_role_permission: {\n                include: {\n                  sys_permission: true\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  })\n  \n  return result\n}\n\nexport const updatePasswordByUserId = async (userId: number, password: string) => {\n  const result = await prisma.sys_user.update({\n    where: {\n      id: userId\n    },\n    data: {\n      password: password\n    }\n  })\n\n  return result\n}\n\n"],"names":["queryDepartNameByDeptId","queryRoleIdByUserId","queryRoleNameByRoleId","queryUsers","queryUserByUserId","queryUserByLoginName","updatePasswordByUserId","deptId","result","prisma","sys_dept","findFirst","where","id","select","dept_name","userId","sys_user_role","user_id","role_id","roleId","sys_role","role_name","sys_user","findMany","findUnique","include","sys_role_permission","sys_permission","loginName","login_name","password","update","data"],"mappings":";;;;;;;;;;;IAEaA,uBAAuB;eAAvBA;;IAYAC,mBAAmB;eAAnBA;;IAYAC,qBAAqB;eAArBA;;IAYAC,UAAU;eAAVA;;IAIAC,iBAAiB;eAAjBA;;IA0BAC,oBAAoB;eAApBA;;IA0BAC,sBAAsB;eAAtBA;;;iEA9FM;;;;;;AAEZ,MAAMN,0BAA0B,OAAOO;IAC5C,MAAMC,SAAS,MAAMC,kBAAOC,SAASC,UAAU;QAC7CC,OAAO;YACLC,IAAIN;QACN;QACAO,QAAQ;YACNC,WAAW;QACb;IACF;IACA,OAAOP,mBAAAA,oBAAAA,KAAAA,IAAAA,OAAQO;AACjB;AAEO,MAAMd,sBAAsB,OAAOe;IACxC,MAAMR,SAAS,MAAMC,kBAAOQ,cAAcN,UAAU;QAClDC,OAAO;YACLM,SAASF;QACX;QACAF,QAAQ;YACNK,SAAS;QACX;IACF;IACA,OAAOX,mBAAAA,oBAAAA,KAAAA,IAAAA,OAAQW;AACjB;AAEO,MAAMjB,wBAAwB,OAAOkB;IAC1C,MAAMZ,SAAS,MAAMC,kBAAOY,SAASV,UAAU;QAC7CC,OAAO;YACLC,IAAIO;QACN;QACAN,QAAQ;YACNQ,WAAW;QACb;IACF;IACA,OAAOd,mBAAAA,oBAAAA,KAAAA,IAAAA,OAAQc;AACjB;AAEO,MAAMnB,aAAa;IACxB,OAAO,MAAMM,kBAAOc,SAASC;AAC/B;AAEO,MAAMpB,oBAAoB,OAAOY;IACtC,MAAMR,SAAS,MAAMC,kBAAOc,SAASE,WAAW;QAC9Cb,OAAO;YACLC,IAAIG;QACN;QACAU,SAAS;YACPhB,UAAU;YACVO,eAAe;gBACbS,SAAS;oBACPL,UAAU;wBACRK,SAAS;4BACPC,qBAAqB;gCACnBD,SAAS;oCACPE,gBAAgB;gCAClB;4BACF;wBACF;oBACF;gBACF;YACF;QACF;IACF;IAEA,OAAOpB;AACT;AAEO,MAAMH,uBAAuB,OAAOwB;IACzC,MAAMrB,SAAS,MAAMC,kBAAOc,SAASZ,UAAU;QAC7CC,OAAO;YACLkB,YAAYD;QACd;QACAH,SAAS;YACPhB,UAAU;YACVO,eAAe;gBACbS,SAAS;oBACPL,UAAU;wBACRK,SAAS;4BACPC,qBAAqB;gCACnBD,SAAS;oCACPE,gBAAgB;gCAClB;4BACF;wBACF;oBACF;gBACF;YACF;QACF;IACF;IAEA,OAAOpB;AACT;AAEO,MAAMF,yBAAyB,OAAOU,QAAgBe;IAC3D,MAAMvB,SAAS,MAAMC,kBAAOc,SAASS,OAAO;QAC1CpB,OAAO;YACLC,IAAIG;QACN;QACAiB,MAAM;YACJF,UAAUA;QACZ;IACF;IAEA,OAAOvB;AACT"}