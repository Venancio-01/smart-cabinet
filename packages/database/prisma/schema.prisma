generator client {
  provider = "prisma-client-js"
  output   = "../../../node_modules/.prisma/client"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model DocCarrier {
  carrierId      Int       @id @default(autoincrement()) @map("Carrier_ID")
  carrierRfid    String?   @map("carrier_rfid") @db.VarChar(128)
  cabinetId      String?   @map("cabinet_id") @db.VarChar(20)
  cabinetDoorId  Int?      @map("cabinet_door_id")
  carrierPStatus Int?      @default(1) @map("carrier_p_status")
  userId         BigInt?   @map("user_id")
  addUser        BigInt?   @map("add_user")
  type           Int?      @db.TinyInt
  remark         String?   @db.VarChar(255)
  createTime     DateTime? @map("create_time") @db.DateTime(0)
  name           String?   @db.VarChar(255)
  removeStatus   Int?      @default(0) @map("remove_status") @db.TinyInt
  secretLevel    Int?      @map("secret_level")

  @@index([carrierRfid], map: "index_rfid")
  @@map("doc_carrier")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model DocCarrierType {
  carrierTypeId BigInt  @id @default(autoincrement()) @map("carrier_type_id")
  typeName      String? @map("type_name") @db.VarChar(255)

  @@map("doc_carrier_type")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model DocCheckLog {
  checkLogId BigInt    @id @default(autoincrement()) @map("check_log_id")
  fileName   String?   @map("file_name") @db.VarChar(200)
  inCount    Int?      @map("in_count")
  outCount   Int?      @map("out_count")
  sumCount   Int?      @map("sum_count")
  createTime DateTime? @map("create_time") @db.DateTime(0)
  updateTime DateTime? @map("update_time") @db.DateTime(0)
  createUser BigInt?   @map("create_user")

  @@map("doc_check_log")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model DocCheckResult {
  id         BigInt    @id @default(autoincrement())
  checkLogId BigInt?   @map("check_log_id")
  rfid       String?   @db.VarChar(100)
  name       String?   @db.VarChar(255)
  state      Int?      @db.TinyInt
  createTime DateTime? @map("create_time") @db.DateTime(0)
  updateTime DateTime? @map("update_time") @db.DateTime(0)

  @@map("doc_check_result")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model DocDirectory {
  directoryId   BigInt    @id @unique(map: "index_id") @default(autoincrement()) @map("directory_id")
  parentId      BigInt    @map("parent_id")
  displayName   String?   @map("display_name") @db.VarChar(100)
  docName       String?   @map("doc_name") @db.VarChar(200)
  docEDirectory String    @unique(map: "index_doc_e_directory") @map("doc_e_directory") @db.VarChar(300)
  sort          Int?
  status        Int
  updateTime    DateTime? @map("update_time") @db.DateTime(0)
  createTime    DateTime  @map("create_time") @db.DateTime(0)

  @@map("doc_directory")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model DocDocument {
  docId          BigInt                @id @default(autoincrement()) @map("doc_id")
  docName        String                @map("doc_name") @db.VarChar(200)
  docSecretLevel Int?                  @map("doc_secret_level")
  docType        Int?                  @map("doc_type") @db.TinyInt
  docRfid        String?               @map("doc_rfid") @db.VarChar(128)
  remark         String?               @db.VarChar(100)
  docPStatus     Int?                  @default(1) @map("doc_p_status")
  userId         BigInt?               @map("user_id")
  deptId         BigInt?               @map("dept_id")
  cabinetId      Int?                  @default(0) @map("cabinet_id")
  cabinetDoorId  Int?                  @map("cabinet_door_id")
  updateTime     DateTime?             @map("update_time") @db.DateTime(0)
  createTime     DateTime              @map("create_time") @db.DateTime(0)
  isOne          String?               @default("0") @map("IS_one") @db.VarChar(255)
  docLastTime    DateTime?             @map("doc_last_time") @db.DateTime(0)
  endTime        DateTime?             @map("end_time") @db.DateTime(0)
  removeStatus   Int?                  @default(0) @map("remove_status") @db.TinyInt
  code           String?               @db.VarChar(255)
  urgency        Int?                  @db.TinyInt
  sendDep        Int?                  @map("send_dep") @db.TinyInt
  sendCode       String?               @map("send_code") @db.VarChar(255)
  bureauDepId    BigInt?               @map("bureau_depId")
  type           Int?                  @db.TinyInt
  carrierTypeId  BigInt?               @map("carrier_type_id")
  receive        String?               @db.VarChar(10)
  year           String?               @db.VarChar(10)
  num            String?               @db.VarChar(50)
  docLastUserId  Int?                  @map("doc_last_user_id")
  department     SysDept?              @relation(fields: [deptId], references: [deptId])
  cabinet        RfidCabinet?          @relation(fields: [cabinetId], references: [id])
  cabinetDoor    RfidCabinetdoor?      @relation(fields: [cabinetDoorId], references: [id])
  alarmRecord    RfidTipsAlarmRecord[]

  @@index([docName], map: "doc_name")
  @@index([docRfid], map: "rfid")
  @@map("doc_document")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model DocOperationLog {
  operationlogId String    @id @map("operationlog_id") @db.VarChar(32)
  docId          BigInt?   @map("doc_id")
  docName        String?   @map("doc_name") @db.VarChar(255)
  operationType  Int?      @map("operation_type")
  operationName  String?   @map("operation_name") @db.VarChar(100)
  userId         BigInt    @map("user_id")
  userName       String    @map("user_name") @db.VarChar(100)
  deptId         BigInt    @map("dept_id")
  deptName       String    @map("dept_name") @db.VarChar(100)
  updateTime     DateTime? @map("update_time") @db.DateTime(0)
  createTime     DateTime  @map("create_time") @db.DateTime(0)

  @@map("doc_operation_log")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model DocSecretLevelRole {
  slrId      BigInt    @id @default(autoincrement()) @map("slr_id")
  roleId     BigInt    @map("role_id")
  roleName   String?   @map("role_name") @db.VarChar(30)
  slrName    String?   @map("slr_name") @db.VarChar(100)
  slrCode    BigInt?   @map("slr_code")
  updateTime DateTime? @map("update_time") @db.DateTime(0)
  createTime DateTime  @map("create_time") @db.DateTime(0)

  @@map("doc_secret_level_role")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model DocumentInfo {
  id             BigInt    @id @default(autoincrement())
  docName        String    @map("doc_name") @db.VarChar(200)
  docSecretLevel Int?      @map("doc_secret_level")
  docType        Int?      @map("doc_type") @db.TinyInt
  remark         String?   @db.VarChar(100)
  docPStatus     Int?      @default(1) @map("doc_p_status")
  userId         BigInt?   @map("user_id")
  deptId         BigInt?   @map("dept_id")
  cabinetId      Int?      @default(0) @map("cabinet_id")
  cabinetDoorId  Int?      @map("cabinet_door_id")
  updateTime     DateTime? @map("update_time") @db.DateTime(0)
  createTime     DateTime  @map("create_time") @db.DateTime(0)
  isOne          String?   @default("0") @map("IS_one") @db.VarChar(255)
  docLastTime    DateTime? @map("doc_last_time") @db.DateTime(0)
  endTime        DateTime? @map("end_time") @db.DateTime(0)
  removeStatus   Int?      @default(0) @map("remove_status") @db.TinyInt
  code           String?   @db.VarChar(255)
  urgency        Int?      @db.TinyInt
  sendDep        Int?      @map("send_dep") @db.TinyInt
  sendCode       String?   @map("send_code") @db.VarChar(255)
  bureauDepId    BigInt?   @map("bureau_depId")
  copies         Int?
  pageCount      Int?      @map("page_count")
  receivedBy     String?   @map("received_by") @db.VarChar(11)
  parentId       BigInt?   @map("parent_id")

  @@index([docName], map: "doc_name")
  @@map("document_info")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model DoorAccessRecords {
  accessId            Int       @id @default(autoincrement()) @map("AccessID")
  accessDirection     Int?      @map("AccessDirection")
  directionCreateTime DateTime? @db.DateTime(0)
  equipmentId         Int?      @map("EquipmentID")
  equipmentName       String?   @map("EquipmentName") @db.VarChar(100)
  remark              String?   @db.VarChar(100)

  @@map("door_access_records")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model DoorAlarmrecord {
  alarmid                Int       @id @default(autoincrement()) @map("Alarmid")
  equipmentId            String?   @map("EquipmentId") @db.VarChar(100)
  equipmentName          String?   @map("EquipmentName") @db.VarChar(100)
  carrierId              String?   @map("Carrier_Id") @db.VarChar(100)
  carrierRfid            String?   @map("Carrier_rfid") @db.VarChar(100)
  carrierName            String?   @map("Carrier_Name") @db.VarChar(100)
  carrierDeptid          BigInt?   @map("Carrier_Deptid")
  carrierDeptName        String?   @map("Carrier_DeptName") @db.VarChar(100)
  carrierType            String?   @map("Carrier_type") @db.VarChar(255)
  isOperation            String?   @db.VarChar(10)
  remark                 String?   @db.VarChar(100)
  createTime             DateTime? @map("CreateTime") @db.DateTime(0)
  dealUser               BigInt?   @map("deal_user")
  dealName               String?   @map("deal_name") @db.VarChar(255)
  dealTime               DateTime? @map("deal_time") @db.DateTime(0)
  lastAccessUsername     String?   @db.VarChar(255)
  lastAccessUserId       BigInt?   @map("lastAccessUserID")
  lastAccessUserDeptname String?   @db.VarChar(255)
  lastAccessRecord       BigInt?
  department             SysDept?  @relation(fields: [carrierDeptid], references: [deptId])

  @@map("door_alarmrecord")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model DoorEquipment {
  equipmentid    Int       @id @default(autoincrement())
  equipmentName  String?   @map("equipment_name") @db.VarChar(100)
  addressip      String?   @db.VarChar(100)
  type           Int?
  fid            Int?
  status         String?   @db.VarChar(100)
  equipmentAddr  String?   @map("equipment_addr") @db.VarChar(100)
  equipmentPort  String?   @map("equipment_Port") @db.VarChar(100)
  equipmentTxid  String?   @map("equipment_txid") @db.VarChar(100)
  remark         String?   @db.VarChar(100)
  macAddress     String?   @db.VarChar(100)
  macIp          String?   @db.VarChar(100)
  alarmSwitch    Int?      @map("Alarm_switch")
  creatorTime    DateTime? @map("CreatorTime") @db.DateTime(0)
  equipmentIn    Int?      @map("equipment_In")
  equipmentInIp  String?   @map("equipment_InIP") @db.VarChar(100)
  equipmentOut   Int?      @map("equipment_Out")
  equipmentOutIp String?   @map("equipment_OutIp") @db.VarChar(100)
  equipmentType  Int?      @map("equipment_Type")
  deviceUserName String?   @db.VarChar(100)
  deviceUserPwd  String?   @db.VarChar(100)
  devicePort     String?   @db.VarChar(100)

  @@map("door_equipment")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model DoorReadRecord {
  readId         Int       @id @default(autoincrement()) @map("ReadID")
  readCreateTine DateTime? @map("ReadCreateTine") @db.DateTime(0)
  readRfid       String?   @map("ReadRfid") @db.VarChar(100)
  equipmentId    Int?      @map("EquipmentID")
  equipmentName  String?   @map("EquipmentName") @db.VarChar(100)
  remark         String?   @db.VarChar(100)

  @@map("door_read_record")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model DoorRfidrecord {
  recordId        Int       @id @default(autoincrement()) @map("Record_id")
  equipmentId     String?   @map("EquipmentId") @db.VarChar(100)
  equipmentName   String?   @map("EquipmentName") @db.VarChar(100)
  carrierId       String?   @map("Carrier_Id") @db.VarChar(100)
  carrierName     String?   @map("Carrier_Name") @db.VarChar(100)
  carrierRfid     String?   @map("Carrier_rfid") @db.VarChar(100)
  carrierDeptid   BigInt?   @map("Carrier_Deptid")
  carrierDeptName String?   @map("Carrier_DeptName") @db.VarChar(100)
  carrierType     String?   @map("Carrier_type") @db.VarChar(255)
  equipmentType   String?   @map("equipment_Type") @db.VarChar(100)
  type            String?   @db.VarChar(100)
  isAlarm         String?   @map("is_alarm") @db.VarChar(100)
  alarmid         String?   @db.VarChar(100)
  creatorTime     DateTime? @map("CreatorTime") @db.DateTime(0)
  isRegister      String?   @map("is_Register") @db.VarChar(255)
  department      SysDept?  @relation(fields: [carrierDeptid], references: [deptId])

  @@map("door_rfidrecord")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model DoorRfidregister {
  registerId      Int       @id @default(autoincrement()) @map("register_id")
  carrierId       BigInt?   @map("Carrier_ID")
  carrierDeptidId String?   @map("Carrier_Deptid_ID") @db.VarChar(50)
  startTime       String?   @map("start_time") @db.VarChar(100)
  endTime         String?   @map("end_time") @db.VarChar(100)
  reamrk          String?   @db.VarChar(100)
  createUserid    BigInt?   @map("create_userid")
  creatorTime     DateTime? @map("CreatorTime") @db.DateTime(0)
  deleteTime      DateTime? @map("DeleteTime") @db.DateTime(0)
  applyUser       String?   @db.VarChar(50)
  approvalUser    String?   @db.VarChar(255)
  outaddress      String?   @db.VarChar(255)
  applyUnit       String?   @db.VarChar(255)
  outreason       String?   @db.VarChar(255)
  docRfid         String?   @map("doc_rfid") @db.VarChar(100)
  type            Boolean?
  state           Int?      @default(0) @db.TinyInt

  @@index([carrierId, state], map: "index_carrierId_state")
  @@map("door_rfidregister")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model GenerateCode {
  id         BigInt   @id @default(autoincrement())
  createTime DateTime @map("create_time") @db.DateTime(0)

  @@map("generate_code")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model PrintJob {
  jobsId      String    @id @map("JobsID") @db.VarChar(32)
  docName     String?   @map("DocName") @db.VarChar(100)
  secLevel    Int?      @map("SecLevel") @db.TinyInt
  usage       String?   @map("Usage") @db.VarChar(255)
  pageCount   Int?      @map("PageCount")
  copyCount   Int?      @map("CopyCount")
  submitTime  DateTime? @map("SubmitTime") @db.DateTime(0)
  printTime   DateTime? @map("PrintTime") @db.DateTime(0)
  status      Int?      @map("Status") @db.TinyInt
  createTime  DateTime? @map("create_time") @db.DateTime(0)
  updateTime  DateTime? @map("update_time") @db.DateTime(0)
  importState Int?      @default(0) @map("import_state") @db.TinyInt

  @@map("print_job")
}

model QrtzBlobTriggers {
  schedName    String       @map("sched_name") @db.VarChar(120)
  triggerName  String       @map("trigger_name") @db.VarChar(200)
  triggerGroup String       @map("trigger_group") @db.VarChar(200)
  blobData     Bytes?       @map("blob_data") @db.Blob
  qrtzTriggers QrtzTriggers @relation(fields: [schedName, triggerName, triggerGroup], references: [schedName, triggerName, triggerGroup], onUpdate: Restrict, map: "qrtz_blob_triggers_ibfk_1")

  @@id([schedName, triggerName, triggerGroup])
  @@map("qrtz_blob_triggers")
}

model QrtzCalendars {
  schedName    String @map("sched_name") @db.VarChar(120)
  calendarName String @map("calendar_name") @db.VarChar(200)
  calendar     Bytes  @db.Blob

  @@id([schedName, calendarName])
  @@map("qrtz_calendars")
}

model QrtzCronTriggers {
  schedName      String       @map("sched_name") @db.VarChar(120)
  triggerName    String       @map("trigger_name") @db.VarChar(200)
  triggerGroup   String       @map("trigger_group") @db.VarChar(200)
  cronExpression String       @map("cron_expression") @db.VarChar(200)
  timeZoneId     String?      @map("time_zone_id") @db.VarChar(80)
  qrtzTriggers   QrtzTriggers @relation(fields: [schedName, triggerName, triggerGroup], references: [schedName, triggerName, triggerGroup], onUpdate: Restrict, map: "qrtz_cron_triggers_ibfk_1")

  @@id([schedName, triggerName, triggerGroup])
  @@map("qrtz_cron_triggers")
}

model QrtzFiredTriggers {
  schedName        String  @map("sched_name") @db.VarChar(120)
  entryId          String  @map("entry_id") @db.VarChar(95)
  triggerName      String  @map("trigger_name") @db.VarChar(200)
  triggerGroup     String  @map("trigger_group") @db.VarChar(200)
  instanceName     String  @map("instance_name") @db.VarChar(200)
  firedTime        BigInt  @map("fired_time")
  schedTime        BigInt  @map("sched_time")
  priority         Int
  state            String  @db.VarChar(16)
  jobName          String? @map("job_name") @db.VarChar(200)
  jobGroup         String? @map("job_group") @db.VarChar(200)
  isNonconcurrent  String? @map("is_nonconcurrent") @db.VarChar(1)
  requestsRecovery String? @map("requests_recovery") @db.VarChar(1)

  @@id([schedName, entryId])
  @@map("qrtz_fired_triggers")
}

model QrtzJobDetails {
  schedName        String         @map("sched_name") @db.VarChar(120)
  jobName          String         @map("job_name") @db.VarChar(200)
  jobGroup         String         @map("job_group") @db.VarChar(200)
  description      String?        @db.VarChar(250)
  jobClassName     String         @map("job_class_name") @db.VarChar(250)
  isDurable        String         @map("is_durable") @db.VarChar(1)
  isNonconcurrent  String         @map("is_nonconcurrent") @db.VarChar(1)
  isUpdateData     String         @map("is_update_data") @db.VarChar(1)
  requestsRecovery String         @map("requests_recovery") @db.VarChar(1)
  jobData          Bytes?         @map("job_data") @db.Blob
  qrtzTriggers     QrtzTriggers[]

  @@id([schedName, jobName, jobGroup])
  @@map("qrtz_job_details")
}

model QrtzLocks {
  schedName String @map("sched_name") @db.VarChar(120)
  lockName  String @map("lock_name") @db.VarChar(40)

  @@id([schedName, lockName])
  @@map("qrtz_locks")
}

model QrtzPausedTriggerGrps {
  schedName    String @map("sched_name") @db.VarChar(120)
  triggerGroup String @map("trigger_group") @db.VarChar(200)

  @@id([schedName, triggerGroup])
  @@map("qrtz_paused_trigger_grps")
}

model QrtzSchedulerState {
  schedName       String @map("sched_name") @db.VarChar(120)
  instanceName    String @map("instance_name") @db.VarChar(200)
  lastCheckinTime BigInt @map("last_checkin_time")
  checkinInterval BigInt @map("checkin_interval")

  @@id([schedName, instanceName])
  @@map("qrtz_scheduler_state")
}

model QrtzSimpleTriggers {
  schedName      String       @map("sched_name") @db.VarChar(120)
  triggerName    String       @map("trigger_name") @db.VarChar(200)
  triggerGroup   String       @map("trigger_group") @db.VarChar(200)
  repeatCount    BigInt       @map("repeat_count")
  repeatInterval BigInt       @map("repeat_interval")
  timesTriggered BigInt       @map("times_triggered")
  qrtzTriggers   QrtzTriggers @relation(fields: [schedName, triggerName, triggerGroup], references: [schedName, triggerName, triggerGroup], onUpdate: Restrict, map: "qrtz_simple_triggers_ibfk_1")

  @@id([schedName, triggerName, triggerGroup])
  @@map("qrtz_simple_triggers")
}

model QrtzSimpropTriggers {
  schedName    String       @map("sched_name") @db.VarChar(120)
  triggerName  String       @map("trigger_name") @db.VarChar(200)
  triggerGroup String       @map("trigger_group") @db.VarChar(200)
  strProp_1    String?      @map("str_prop_1") @db.VarChar(512)
  strProp_2    String?      @map("str_prop_2") @db.VarChar(512)
  strProp_3    String?      @map("str_prop_3") @db.VarChar(512)
  intProp_1    Int?         @map("int_prop_1")
  intProp_2    Int?         @map("int_prop_2")
  longProp_1   BigInt?      @map("long_prop_1")
  longProp_2   BigInt?      @map("long_prop_2")
  decProp_1    Decimal?     @map("dec_prop_1") @db.Decimal(13, 4)
  decProp_2    Decimal?     @map("dec_prop_2") @db.Decimal(13, 4)
  boolProp_1   String?      @map("bool_prop_1") @db.VarChar(1)
  boolProp_2   String?      @map("bool_prop_2") @db.VarChar(1)
  qrtzTriggers QrtzTriggers @relation(fields: [schedName, triggerName, triggerGroup], references: [schedName, triggerName, triggerGroup], onUpdate: Restrict, map: "qrtz_simprop_triggers_ibfk_1")

  @@id([schedName, triggerName, triggerGroup])
  @@map("qrtz_simprop_triggers")
}

model QrtzTriggers {
  schedName           String               @map("sched_name") @db.VarChar(120)
  triggerName         String               @map("trigger_name") @db.VarChar(200)
  triggerGroup        String               @map("trigger_group") @db.VarChar(200)
  jobName             String               @map("job_name") @db.VarChar(200)
  jobGroup            String               @map("job_group") @db.VarChar(200)
  description         String?              @db.VarChar(250)
  nextFireTime        BigInt?              @map("next_fire_time")
  prevFireTime        BigInt?              @map("prev_fire_time")
  priority            Int?
  triggerState        String               @map("trigger_state") @db.VarChar(16)
  triggerType         String               @map("trigger_type") @db.VarChar(8)
  startTime           BigInt               @map("start_time")
  endTime             BigInt?              @map("end_time")
  calendarName        String?              @map("calendar_name") @db.VarChar(200)
  misfireInstr        Int?                 @map("misfire_instr") @db.SmallInt
  jobData             Bytes?               @map("job_data") @db.Blob
  qrtzBlobTriggers    QrtzBlobTriggers?
  qrtzCronTriggers    QrtzCronTriggers?
  qrtzSimpleTriggers  QrtzSimpleTriggers?
  qrtzSimpropTriggers QrtzSimpropTriggers?
  qrtzJobDetails      QrtzJobDetails       @relation(fields: [schedName, jobName, jobGroup], references: [schedName, jobName, jobGroup], onUpdate: Restrict, map: "qrtz_triggers_ibfk_1")

  @@id([schedName, triggerName, triggerGroup])
  @@index([schedName, jobName, jobGroup], map: "sched_name")
  @@map("qrtz_triggers")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model RfidCabinet {
  id              Int               @id @default(autoincrement()) @map("ID")
  name            String?           @map("Name") @db.VarChar(20)
  state           String?           @map("State") @db.VarChar(10)
  typeClass       String?           @map("TypeClass") @db.VarChar(255)
  fid             Int               @default(0)
  cabIndex        String?           @db.VarChar(20)
  cabAddr         String?           @db.VarChar(15)
  rdAddr          String?           @map("RDAddr") @db.VarChar(15)
  rdAddr2         String?           @map("RDAddr2") @db.VarChar(15)
  rfadCom         String?           @map("RFAD_Com") @db.VarChar(20)
  rfadBaudrate    String?           @map("RFAD_baudrate") @db.VarChar(20)
  operateOut      String?           @db.VarChar(20)
  openDoor        String?           @db.VarChar(10)
  fingerServer    String?           @db.VarChar(15)
  secretLevel     String?           @map("SecretLevel") @db.VarChar(50)
  classification  String?           @map("Classification") @db.VarChar(50)
  deptId          BigInt?           @map("dept_id")
  cabinetDoorList RfidCabinetdoor[]
  department      SysDept?          @relation(fields: [deptId], references: [deptId])
  docDocument     DocDocument[]

  @@map("rfid_cabinet")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model RfidCabinetdoor {
  id          Int           @id @default(autoincrement()) @map("Id")
  cabinetId   Int?          @map("CabinetId")
  name        Int?          @map("Name")
  state       String?       @map("State") @db.VarChar(10)
  kgbh        String?       @map("Kgbh") @db.VarChar(255)
  kgzt        String?       @map("Kgzt") @db.VarChar(255)
  kglx        String?       @map("Kglx") @db.VarChar(255)
  folderPath  String?       @map("FolderPath") @db.VarChar(255)
  orderIndex  String?       @map("OrderIndex") @db.VarChar(255)
  txAddr      String?       @db.VarChar(255)
  txId        String?       @db.VarChar(255)
  viewName    String?       @db.VarChar(255)
  cabinet     RfidCabinet?  @relation(fields: [cabinetId], references: [id])
  docDocument DocDocument[]

  @@map("rfid_cabinetdoor")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model RfidCardUser {
  cardId     Int       @id @default(autoincrement()) @map("CardId")
  userid     Int?      @map("Userid")
  cardData   String?   @map("CardData") @db.VarChar(255)
  createDate DateTime? @map("CreateDate") @db.DateTime(0)

  @@map("rfid_card_user")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model RfidDoorDept {
  ddId   BigInt @id @default(autoincrement()) @map("dd_id")
  doorId Int?   @map("DoorID")
  deptid Int?

  @@map("rfid_door_dept")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model RfidDoorUser {
  duId   BigInt @id @default(autoincrement()) @map("du_id")
  doorId Int?   @map("DoorID")
  userid Int?   @map("Userid")

  @@map("rfid_door_user")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model RfidFingerUser {
  fingerId   Int       @id @default(autoincrement()) @map("FingerID")
  userid     Int?      @map("Userid")
  order      Int?
  fingerData String?   @map("FingerData") @db.VarChar(3000)
  createDate DateTime? @map("CreateDate") @db.DateTime(0)

  @@map("rfid_finger_user")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model RfidOperationRecord {
  recordId    Int     @id @default(autoincrement())
  operationid String? @db.VarChar(50)
  userId      String? @map("UserID") @db.VarChar(255)
  createDate  String? @map("CreateDate") @db.VarChar(255)
  type        String? @map("Type") @db.VarChar(255)
  cadinetId   String? @map("cadinetID") @db.VarChar(255)
  doorid      String? @db.VarChar(11)
  content     String? @db.VarChar(255)

  @@map("rfid_operation_record")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model RfidRemoveCarrier {
  carrierId      Int       @id @default(autoincrement()) @map("Carrier_ID")
  carrierRfid    String?   @map("carrier_rfid") @db.VarChar(128)
  cabinetId      String?   @map("cabinet_id") @db.VarChar(20)
  cabinetDoorId  String?   @map("cabinet_door_id") @db.VarChar(20)
  carrierPStatus String?   @map("carrier_p_status") @db.VarChar(255)
  userId         BigInt?   @map("user_id")
  addUser        BigInt?   @map("add_user")
  type           Int?      @db.TinyInt
  remark         String?   @db.VarChar(255)
  createTime     DateTime? @map("create_time") @db.DateTime(0)
  name           String?   @db.VarChar(255)
  recordId       BigInt?   @map("record_id")

  @@map("rfid_remove_carrier")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model RfidRemoveDocument {
  docId          BigInt    @id @default(autoincrement()) @map("doc_id")
  docName        String    @map("doc_name") @db.VarChar(200)
  docSecretLevel Int?      @map("doc_secret_level")
  docType        String?   @map("doc_type") @db.VarChar(10)
  docRfid        String?   @map("doc_rfid") @db.VarChar(128)
  remark         String?   @db.VarChar(100)
  docPStatus     Int?      @default(1) @map("doc_p_status")
  userId         BigInt?   @map("user_id")
  deptId         BigInt    @map("dept_id")
  cabinetId      String?   @map("cabinet_id") @db.VarChar(20)
  cabinetDoorId  String?   @map("cabinet_door_id") @db.VarChar(20)
  updateTime     DateTime? @map("update_time") @db.DateTime(0)
  createTime     DateTime  @map("create_time") @db.DateTime(0)
  isOne          String?   @default("0") @map("IS_one") @db.VarChar(255)
  docLastTime    DateTime? @map("doc_last_time") @db.DateTime(0)
  endTime        DateTime? @map("end_time") @db.DateTime(0)
  recordId       BigInt?   @map("record_id")

  @@map("rfid_remove_document")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model RfidRemoveRecord {
  id         BigInt    @id @default(autoincrement())
  removeTime DateTime? @map("remove_time") @db.DateTime(0)
  userId     BigInt?   @map("user_id")

  @@map("rfid_remove_record")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model RfidRemoveRecordRfid {
  id             BigInt  @id @default(autoincrement())
  removeRecordId BigInt? @map("remove_record_id")
  rfid           String? @db.VarChar(255)

  @@map("rfid_remove_record_rfid")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model RfidRemoveTemp {
  id   Int    @id @default(autoincrement())
  rfid String @db.VarChar(255)

  @@map("rfid_remove_temp")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model RfidRfidRecord {
  id             Int       @id @default(autoincrement())
  userId         BigInt?
  operationId    String?   @map("operationID") @db.VarChar(50)
  cabinetId      Int?
  cabDoorId      Int?
  rfidId         String?   @map("RFIDId") @db.VarChar(50)
  createTime     DateTime? @db.DateTime(0)
  handleId       String?   @default("-1") @map("handleID") @db.VarChar(50)
  isOpen         String?   @db.VarChar(10)
  isBorrow       String?   @db.VarChar(10)
  type           Int?      @db.TinyInt
  userName       String?   @map("user_name") @db.VarChar(255)
  userDeptName   String?   @map("user_dept_name") @db.VarChar(255)
  docCarName     String?   @map("doc_car_name") @db.VarChar(255)
  doccarDeptName String?   @map("doccar_dept_name") @db.VarChar(255)
  cabName        String?   @map("cab_name") @db.VarChar(255)
  cabdoorName    String?   @map("cabdoor_name") @db.VarChar(255)

  @@index([operationId], map: "index_operationID")
  @@index([rfidId], map: "index_rfid")
  @@map("rfid_rfid_record")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model RfidSwitchRecord {
  id            Int     @id @default(autoincrement()) @map("Id")
  cabinetId     String? @map("CabinetId") @db.VarChar(255)
  cabinetDoorId String? @map("CabinetDoorId") @db.VarChar(255)
  operationId   String? @map("operationID") @db.VarChar(50)
  userId        Int?    @map("userID")
  type          String? @map("TYPE") @db.VarChar(255)
  content       String? @db.VarChar(255)
  datetime      String? @map("Datetime") @db.VarChar(255)

  @@map("rfid_switch_record")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model RfidTipsAlarmRecord {
  recordId          Int          @id @default(autoincrement())
  alarmType         String?      @map("Alarm_Type") @db.VarChar(255)
  type              Int?         @default(0) @map("Type")
  userId            Int?         @map("UserID")
  operationid       String?      @db.VarChar(50)
  createDate        DateTime?    @map("CreateDate") @db.DateTime(0)
  handleUserId      Int?         @map("Handle_UserID")
  handleOperationid String?      @map("Handle_operationid") @db.VarChar(50)
  handleDate        DateTime?    @map("Handle_Date") @db.DateTime(0)
  cadinetId         Int?         @default(0) @map("cadinetID")
  doorid            Int?         @default(0)
  content           String?      @db.VarChar(255)
  contentType       Int?         @db.TinyInt
  rfid              String?      @map("Rfid") @db.VarChar(255)
  groupid           BigInt?
  docId             BigInt?
  docCarName        String?      @map("doc_car_name") @db.VarChar(255)
  deptName          String?      @map("dept_name") @db.VarChar(255)
  carUserName       String?      @map("car_user_name") @db.VarChar(255)
  cabName           String?      @map("cab_name") @db.VarChar(255)
  cabdoorName       String?      @map("cabdoor_name") @db.VarChar(255)
  opeUserName       String?      @map("ope_user_name") @db.VarChar(255)
  cabdoorUserName   String?      @map("cabdoor_User_name") @db.VarChar(255)
  cabdoorDeptName   String?      @map("cabdoor_dept_name") @db.VarChar(255)
  isOperation       Int?         @default(0) @db.TinyInt
  docDocument       DocDocument? @relation(fields: [docId], references: [docId])

  @@index([doorid], map: "index_doorid")
  @@index([type], map: "index_type")
  @@map("rfid_tips_alarm_record")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model RfidTipsRecord {
  recordId          Int       @id @default(autoincrement())
  userId            Int?      @map("UserID")
  operationid       String?   @db.VarChar(50)
  createDate        DateTime? @map("CreateDate") @db.DateTime(0)
  handleUserId      Int?      @map("Handle_UserID")
  handleOperationid String?   @map("Handle_operationid") @db.VarChar(50)
  handleDate        DateTime? @map("Handle_Date") @db.DateTime(0)
  cadinetId         Int?      @default(0) @map("cadinetID")
  doorid            Int?      @default(0)
  content           String?   @db.VarChar(255)
  contentType       Int?      @db.TinyInt
  rfid              String?   @map("Rfid") @db.VarChar(255)
  groupid           BigInt?
  docId             BigInt?
  docCarName        String?   @map("doc_car_name") @db.VarChar(255)
  deptName          String?   @map("dept_name") @db.VarChar(255)
  carUserName       String?   @map("car_user_name") @db.VarChar(255)
  cabName           String?   @map("cab_name") @db.VarChar(255)
  cabdoorName       String?   @map("cabdoor_name") @db.VarChar(255)
  opeUserName       String?   @map("ope_user_name") @db.VarChar(255)
  cabdoorUserName   String?   @map("cabdoor_User_name") @db.VarChar(255)
  cabdoorDeptName   String?   @map("cabdoor_dept_name") @db.VarChar(255)
  isOperation       Int?      @default(0) @db.TinyInt

  @@map("rfid_tips_record")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model SysConfig {
  configId    Int       @id @default(autoincrement()) @map("config_id")
  configName  String?   @default("") @map("config_name") @db.VarChar(100)
  configKey   String?   @default("") @map("config_key") @db.VarChar(100)
  configValue String?   @default("") @map("config_value") @db.VarChar(100)
  configType  String?   @default("N") @map("config_type") @db.Char(1)
  createBy    String?   @default("") @map("create_by") @db.VarChar(64)
  createTime  DateTime? @map("create_time") @db.DateTime(0)
  updateBy    String?   @default("") @map("update_by") @db.VarChar(64)
  updateTime  DateTime? @map("update_time") @db.DateTime(0)
  remark      String?   @db.VarChar(500)

  @@map("sys_config")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model SysDept {
  deptId          BigInt            @id @default(autoincrement()) @map("dept_id")
  parentId        BigInt?           @default(0) @map("parent_id")
  ancestors       String?           @default("") @db.VarChar(50)
  deptName        String?           @default("") @map("dept_name") @db.VarChar(30)
  orderNum        Int?              @default(0) @map("order_num")
  leader          String?           @db.VarChar(20)
  phone           String?           @db.VarChar(11)
  email           String?           @db.VarChar(50)
  status          String?           @default("0") @db.Char(1)
  delFlag         String?           @default("0") @map("del_flag") @db.Char(1)
  createBy        String?           @default("") @map("create_by") @db.VarChar(64)
  createTime      DateTime?         @map("create_time") @db.DateTime(0)
  updateBy        String?           @default("") @map("update_by") @db.VarChar(64)
  updateTime      DateTime?         @map("update_time") @db.DateTime(0)
  level           Int?              @db.TinyInt
  code            Int?              @default(0)
  docDocuments    DocDocument[]
  users           SysUser[]
  rfidCabinet     RfidCabinet[]
  doorAlarmrecord DoorAlarmrecord[]
  doorRfidrecord  DoorRfidrecord[]

  @@map("sys_dept")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model SysDictData {
  dictCode   BigInt    @id @default(autoincrement()) @map("dict_code")
  dictSort   Int?      @default(0) @map("dict_sort")
  dictLabel  String?   @default("") @map("dict_label") @db.VarChar(100)
  dictValue  String?   @default("") @map("dict_value") @db.VarChar(100)
  dictType   String?   @default("") @map("dict_type") @db.VarChar(100)
  cssClass   String?   @map("css_class") @db.VarChar(100)
  listClass  String?   @map("list_class") @db.VarChar(100)
  isDefault  String?   @default("N") @map("is_default") @db.Char(1)
  status     String?   @default("0") @db.Char(1)
  createBy   String?   @default("") @map("create_by") @db.VarChar(64)
  createTime DateTime? @map("create_time") @db.DateTime(0)
  updateBy   String?   @default("") @map("update_by") @db.VarChar(64)
  updateTime DateTime? @map("update_time") @db.DateTime(0)
  remark     String?   @db.VarChar(500)

  @@map("sys_dict_data")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model SysDictType {
  dictId     BigInt    @id @default(autoincrement()) @map("dict_id")
  dictName   String?   @default("") @map("dict_name") @db.VarChar(100)
  dictType   String?   @unique(map: "dict_type") @default("") @map("dict_type") @db.VarChar(100)
  status     String?   @default("0") @db.Char(1)
  createBy   String?   @default("") @map("create_by") @db.VarChar(64)
  createTime DateTime? @map("create_time") @db.DateTime(0)
  updateBy   String?   @default("") @map("update_by") @db.VarChar(64)
  updateTime DateTime? @map("update_time") @db.DateTime(0)
  remark     String?   @db.VarChar(500)

  @@map("sys_dict_type")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model SysFileInfo {
  fileId   Int     @id @default(autoincrement()) @map("file_id")
  fileName String? @default("") @map("file_name") @db.VarChar(50)
  filePath String? @default("") @map("file_path") @db.VarChar(255)

  @@map("sys_file_info")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model SysJob {
  jobId          BigInt    @default(autoincrement()) @map("job_id")
  jobName        String    @default("") @map("job_name") @db.VarChar(64)
  jobGroup       String    @default("") @map("job_group") @db.VarChar(64)
  methodName     String?   @default("") @map("method_name") @db.VarChar(500)
  methodParams   String?   @map("method_params") @db.VarChar(50)
  cronExpression String?   @default("") @map("cron_expression") @db.VarChar(255)
  misfirePolicy  String?   @default("3") @map("misfire_policy") @db.VarChar(20)
  concurrent     String?   @default("1") @db.Char(1)
  status         String?   @default("0") @db.Char(1)
  createBy       String?   @default("") @map("create_by") @db.VarChar(64)
  createTime     DateTime? @map("create_time") @db.DateTime(0)
  updateBy       String?   @default("") @map("update_by") @db.VarChar(64)
  updateTime     DateTime? @map("update_time") @db.DateTime(0)
  remark         String?   @default("") @db.VarChar(500)

  @@id([jobId, jobName, jobGroup])
  @@map("sys_job")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model SysJobLog {
  jobLogId      BigInt    @id @default(autoincrement()) @map("job_log_id")
  jobName       String    @map("job_name") @db.VarChar(64)
  jobGroup      String    @map("job_group") @db.VarChar(64)
  methodName    String?   @map("method_name") @db.VarChar(500)
  methodParams  String?   @map("method_params") @db.VarChar(50)
  jobMessage    String?   @map("job_message") @db.VarChar(500)
  status        String?   @default("0") @db.Char(1)
  exceptionInfo String?   @default("") @map("exception_info") @db.VarChar(2000)
  createTime    DateTime? @map("create_time") @db.DateTime(0)

  @@map("sys_job_log")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model SysLogininfor {
  infoId        BigInt    @id @default(autoincrement()) @map("info_id")
  loginName     String?   @default("") @map("login_name") @db.VarChar(50)
  ipaddr        String?   @default("") @db.VarChar(50)
  loginLocation String?   @default("") @map("login_location") @db.VarChar(255)
  browser       String?   @default("") @db.VarChar(50)
  os            String?   @default("") @db.VarChar(50)
  status        String?   @default("0") @db.Char(1)
  msg           String?   @default("") @db.VarChar(255)
  loginTime     DateTime? @map("login_time") @db.DateTime(0)

  @@map("sys_logininfor")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model SysMenu {
  menuId     BigInt    @id @default(autoincrement()) @map("menu_id")
  menuName   String    @map("menu_name") @db.VarChar(50)
  parentId   BigInt?   @default(0) @map("parent_id")
  orderNum   Int?      @default(0) @map("order_num")
  url        String?   @default("#") @db.VarChar(200)
  menuType   String?   @default("") @map("menu_type") @db.Char(1)
  visible    String?   @default("0") @db.Char(1)
  perms      String?   @db.VarChar(100)
  icon       String?   @default("#") @db.VarChar(100)
  createBy   String?   @default("") @map("create_by") @db.VarChar(64)
  createTime DateTime? @map("create_time") @db.DateTime(0)
  updateBy   String?   @default("") @map("update_by") @db.VarChar(64)
  updateTime DateTime? @map("update_time") @db.DateTime(0)
  remark     String?   @default("") @db.VarChar(500)

  @@map("sys_menu")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model SysNotice {
  noticeId      Int       @id @default(autoincrement()) @map("notice_id")
  noticeTitle   String    @map("notice_title") @db.VarChar(50)
  noticeType    String    @map("notice_type") @db.Char(1)
  noticeContent String?   @map("notice_content") @db.VarChar(2000)
  status        String?   @default("0") @db.Char(1)
  createBy      String?   @default("") @map("create_by") @db.VarChar(64)
  createTime    DateTime? @map("create_time") @db.DateTime(0)
  updateBy      String?   @default("") @map("update_by") @db.VarChar(64)
  updateTime    DateTime? @map("update_time") @db.DateTime(0)
  remark        String?   @db.VarChar(255)

  @@map("sys_notice")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model SysOperLog {
  operId       BigInt    @id @default(autoincrement()) @map("oper_id")
  title        String?   @default("") @db.VarChar(50)
  businessType Int?      @default(0) @map("business_type")
  method       String?   @default("") @db.VarChar(100)
  operatorType Int?      @default(0) @map("operator_type")
  operName     String?   @default("") @map("oper_name") @db.VarChar(50)
  deptName     String?   @default("") @map("dept_name") @db.VarChar(50)
  operUrl      String?   @default("") @map("oper_url") @db.VarChar(255)
  operIp       String?   @default("") @map("oper_ip") @db.VarChar(50)
  operLocation String?   @default("") @map("oper_location") @db.VarChar(255)
  operParam    String?   @default("") @map("oper_param") @db.VarChar(2000)
  status       Int?      @default(0)
  errorMsg     String?   @default("") @map("error_msg") @db.VarChar(2000)
  operTime     DateTime? @map("oper_time") @db.DateTime(0)

  @@map("sys_oper_log")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model SysPost {
  postId     BigInt    @id @default(autoincrement()) @map("post_id")
  postCode   String    @map("post_code") @db.VarChar(64)
  postName   String    @map("post_name") @db.VarChar(50)
  postSort   Int       @map("post_sort")
  status     String    @db.Char(1)
  createBy   String?   @default("") @map("create_by") @db.VarChar(64)
  createTime DateTime? @map("create_time") @db.DateTime(0)
  updateBy   String?   @default("") @map("update_by") @db.VarChar(64)
  updateTime DateTime? @map("update_time") @db.DateTime(0)
  remark     String?   @db.VarChar(500)

  @@map("sys_post")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model SysRole {
  roleId     BigInt        @id @default(autoincrement()) @map("role_id")
  roleName   String        @map("role_name") @db.VarChar(30)
  roleKey    String        @map("role_key") @db.VarChar(100)
  roleSort   Int           @map("role_sort")
  dataScope  String?       @default("1") @map("data_scope") @db.Char(1)
  status     String        @db.Char(1)
  delFlag    String?       @default("0") @map("del_flag") @db.Char(1)
  createBy   String?       @default("") @map("create_by") @db.VarChar(64)
  createTime DateTime?     @map("create_time") @db.DateTime(0)
  updateBy   String?       @default("") @map("update_by") @db.VarChar(64)
  updateTime DateTime?     @map("update_time") @db.DateTime(0)
  remark     String?       @db.VarChar(500)
  userRole   SysUserRole[]

  @@map("sys_role")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model SysRoleDept {
  roleId BigInt @map("role_id")
  deptId BigInt @map("dept_id")

  @@id([roleId, deptId])
  @@map("sys_role_dept")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model SysRoleMenu {
  roleId BigInt @map("role_id")
  menuId BigInt @map("menu_id")

  @@id([roleId, menuId])
  @@map("sys_role_menu")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model SysUser {
  userId      BigInt        @id @default(autoincrement()) @map("user_id")
  deptId      BigInt?       @map("dept_id")
  loginName   String        @map("login_name") @db.VarChar(30)
  userName    String        @map("user_name") @db.VarChar(30)
  userType    String?       @default("00") @map("user_type") @db.VarChar(2)
  email       String?       @default("") @db.VarChar(50)
  phonenumber String?       @default("") @db.VarChar(11)
  sex         String?       @default("0") @db.Char(1)
  avatar      String?       @default("") @db.VarChar(100)
  password    String?       @default("") @db.VarChar(50)
  salt        String?       @default("") @db.VarChar(20)
  status      String?       @default("0") @db.Char(1)
  delFlag     String?       @default("0") @map("del_flag") @db.Char(1)
  loginIp     String?       @default("") @map("login_ip") @db.VarChar(50)
  loginDate   DateTime?     @map("login_date") @db.DateTime(0)
  createBy    String?       @default("") @map("create_by") @db.VarChar(64)
  createTime  DateTime?     @map("create_time") @db.DateTime(0)
  updateBy    String?       @default("") @map("update_by") @db.VarChar(64)
  updateTime  DateTime?     @map("update_time") @db.DateTime(0)
  remark      String?       @default("") @db.VarChar(500)
  type        Int?          @default(1)
  code        String?       @db.VarChar(255)
  userRole    SysUserRole[]
  department  SysDept?      @relation(fields: [deptId], references: [deptId])

  @@map("sys_user")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model SysUserOnline {
  sessionId      String    @id @default("") @db.VarChar(50)
  loginName      String?   @default("") @map("login_name") @db.VarChar(50)
  deptName       String?   @default("") @map("dept_name") @db.VarChar(50)
  ipaddr         String?   @default("") @db.VarChar(50)
  loginLocation  String?   @default("") @map("login_location") @db.VarChar(255)
  browser        String?   @default("") @db.VarChar(50)
  os             String?   @default("") @db.VarChar(50)
  status         String?   @default("") @db.VarChar(10)
  startTimestamp DateTime? @map("start_timestamp") @db.DateTime(0)
  lastAccessTime DateTime? @map("last_access_time") @db.DateTime(0)
  expireTime     Int?      @default(0) @map("expire_time")

  @@map("sys_user_online")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model SysUserPost {
  userId BigInt @map("user_id")
  postId BigInt @map("post_id")

  @@id([userId, postId])
  @@map("sys_user_post")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model SysUserRole {
  userId BigInt   @map("user_id")
  roleId BigInt   @map("role_id")
  user   SysUser? @relation(fields: [userId], references: [userId])
  role   SysRole? @relation(fields: [roleId], references: [roleId])

  @@id([userId, roleId])
  @@map("sys_user_role")
}
